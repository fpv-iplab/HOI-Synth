using System;
using UnityEngine.Perception.GroundTruth.Utilities;

namespace UnityEngine.Perception.GroundTruth
{
    /// <summary>
    /// Describes an instance of an object in an instance segmentation frame.
    /// Generated by <see cref="RenderedObjectInfoGenerator"/>.
    /// </summary>
    public struct RenderedObjectInfo : IEquatable<RenderedObjectInfo>
    {
        /// <summary>
        /// The index of the object within the LabelManager.
        /// </summary>
        public uint instanceIndex;

        /// <summary>
        /// The instanceId of the rendered object.
        /// </summary>
        public uint instanceId;

        /// <summary>
        /// The bounding box of the object in pixel coordinates.
        /// </summary>
        public Rect boundingBox;

        /// <summary>
        /// The number of pixels in the image matching this instance.
        /// </summary>
        public int pixelCount;

        /// <summary>
        /// The unique RGBA color for the instance.
        /// </summary>
        public Color32 instanceColor;

        /// <summary>
        /// Custom ToString output
        /// </summary>
        /// <returns>Custom ToString data</returns>
        public override string ToString()
        {
            return $"{nameof(instanceId)}: {instanceId}, {nameof(boundingBox)}: {boundingBox}, " +
                $"{nameof(pixelCount)}: {pixelCount}, {nameof(instanceColor)}: {instanceColor}";
        }

        /// <summary>
        /// Overrides comparing with out object.
        /// Accepts only typeof(<see cref="RenderedObjectInfo"/>)
        /// </summary>
        /// <param name="other">Any other <see cref="RenderedObjectInfo"/></param>
        /// <returns>True if object is <see cref="RenderedObjectInfo"/> and internal data is the same</returns>
        public bool Equals(RenderedObjectInfo other)
        {
            return instanceId == other.instanceId &&
                boundingBox.Equals(other.boundingBox) &&
                pixelCount == other.pixelCount;
        }

        /// <summary>
        /// Overrides comparing with out object.
        /// Accepts only typeof(<see cref="RenderedObjectInfo"/>)
        /// </summary>
        /// <param name="obj">Any object</param>
        /// <returns>True if object is <see cref="RenderedObjectInfo"/> and internal data is the same</returns>
        public override bool Equals(object obj)
        {
            return obj is RenderedObjectInfo other && Equals(other);
        }

        /// <summary>
        /// Custom GetHashCode function
        /// </summary>
        /// <returns>Custom calculated hash</returns>
        public override int GetHashCode()
        {
            unchecked
            {
                // ReSharper disable NonReadonlyMemberInGetHashCode
                var hashCode = (int)instanceId;
                hashCode = (hashCode * 397) ^ boundingBox.GetHashCode();
                hashCode = (hashCode * 397) ^ pixelCount;
                return hashCode;
            }
        }
    }
}
